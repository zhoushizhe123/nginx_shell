user nginx; 
worker_processes  1;
worker_rlimit_nofile 65535;

error_log  logs/error.log;
pid        logs/nginx.pid;


events {
    worker_connections  65535;
    multi_accept on;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    
    map $http_x_forwarded_for  $clientRealIp {
      ""    $remote_addr;
      ~^(?P<firstAddr>[0-9\.]+),?.*$    $firstAddr;
    }

    log_format jsonold escape=json '{ "@timestamp": "$time_iso8601",'
        '"remote_addr": "$remote_addr",'
        '"x_forwarded_for": "$http_x_forwarded_for",'
        '"time_local": "$time_local",'
        '"http_host":"$host",'
        '"request": "$request",'
        '"request_method": "$request_method",'
        '"request_body": "$request_body",'
        '"status": "$status",'
        '"p_status": "$upstream_status",'
        '"body_bytes_sent": "$body_bytes_sent",'
        '"http_referer": "$http_referer",'
        '"http_user_agent": "$http_user_agent",'
        '"request_time": "$request_time",'
        '"upstreamhost":"$upstream_addr",'
        '"upstream_response_time": "$upstream_response_time" }';

    log_format json '{ "@timestamp": "$time_iso8601",'
        '"remote_addr": "$remote_addr",'
        '"x_forwarded_for": "$http_x_forwarded_for",'
        '"time_local": "$time_local",'
        '"http_host":"$host",'
        '"request": "$request",'
        '"request_method": "$request_method",'
        '"status": "$status",'
        '"p_status": "$upstream_status",'
        '"body_bytes_sent": "$body_bytes_sent",'
        '"http_referer": "$http_referer",'
        '"http_user_agent": "$http_user_agent",'
        '"request_time": "$request_time",'
        '"upstreamhost":"$upstream_addr",'
        '"upstream_response_time": "$upstream_response_time" }';

	 ### 用户的 IP 地址  作为 Key，每个 IP 地址最多有 50 个并发连接
	 #### 你想开 几千个连接 刷死我？ 超过 50 个连接，直接返回 503 错误给你，根本不处理你的请求了
	 #  limit_conn_zone $clientRealIp zone=TotalConnLimitZone:10m ;
	 #  limit_conn  TotalConnLimitZone  50;
	 #  limit_conn_log_level notice;

	 #### 用户的 IP 地址  作为 Key，以ConnLimitZone 为名 每个 IP 地址每秒处理 80 个请求
	 #### 你想用程序每秒几百次的刷我，没戏，再快了就不处理了，直接返回 503 错误给你
	 #  limit_req_zone $clientRealIp  zone=ConnLimitZone:10m  rate=80r/s;
	 #  limit_req_log_level notice; 
    
    charset  utf-8;

    vhost_traffic_status_zone;
    vhost_traffic_status_filter_by_host on;
  
    lua_shared_dict limit 20m;
    lua_shared_dict jump 20m;
    lua_code_cache on;
    server_tokens off;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 300m;

    req_status_zone server_name $server_name 256k;
    req_status_zone server_addr $server_addr 256k;
    req_status_zone server_url $server_name$uri 256k;
    req_status server_name server_addr server_url;

    sendfile on;
    tcp_nopush     on;
    keepalive_timeout 60;
    tcp_nodelay on;

    # include  /usr/local/nginx/conf/sites/https.conf;

    client_body_buffer_size  1280k;
    proxy_connect_timeout    900;
    proxy_read_timeout       900;
    proxy_send_timeout       900;
    proxy_buffer_size        1024k;
    proxy_buffers            40 1024k;
    proxy_busy_buffers_size 1024k;
    proxy_temp_file_write_size 1024k;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types       text/plainapplication/x-javascript text/css application/xml video/mp4;
    gzip_vary on;
	 
    fastcgi_connect_timeout 5s;
    fastcgi_send_timeout 6000s;
    fastcgi_read_timeout 6000s;
    fastcgi_buffer_size 128k;
    fastcgi_buffers 256 16k;
    fastcgi_busy_buffers_size 1m;
    fastcgi_temp_file_write_size 1m;
	 
    realtime_zonesize 16m;
	 
	 
    geoip2 /etc/geoip/GeoLite2-Country.mmdb {
	auto_reload 5m;
        $geoip2_metadata_country_build metadata build_epoch;
        $geoip2_country_code default=US country iso_code;
        $geoip2_country_name country names zh-CN;
    }
 
    geoip2 /etc/geoip/GeoLite2-City.mmdb {
	$geoip2_city_name default=ShangHai city names zh-CN;
	$geoip2_continent_code continent code;
    }
	
# 显示的定义一个 default server
    server {
       #listen  443 ssl;
       listen  80 default_server;
       server_name _;
       return  403; # 403 forbidden
       #ssl on;
       #ssl_certificate 	/usr/local/nginx/ssl/xx99.com.crt;
       #ssl_certificate_key     /usr/local/nginx/ssl/xx99.com.key;
       access_log               /usr/local/nginx/logs/def-access.log json;
       error_log                /usr/local/nginx/logs/def-error.log;
    }

include /usr/local/nginx/conf.d/*.conf;
}
